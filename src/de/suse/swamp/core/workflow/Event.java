/*
 * SWAMP Workflow Administration and Management Platform
 *
 * Copyright (c) 2003 Sonja Krause-Harder <skh [at] suse.de>
 * Copyright (c) 2006 Novell Inc.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of version 2 of the GNU General Public
 * License as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE. See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, write to the Free Software Foundation, Inc., 51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301 USA 
 *
 * In addition, as a special exception, Novell Inc. gives permission to link the
 * code of this program with the following applications:
 *
 * - All applications of the Apache Software Foundation 
 *
 * and distribute such linked combinations.
 */

package de.suse.swamp.core.workflow;

import de.suse.swamp.core.util.*;

/**
 * The Event.
 *
 * @author Sonja Krause-Harder &lt;skh@suse.de&gt;
 * @version $Id: Event.java 7105 2006-02-02 14:31:31Z tschmidt $
 *
 */

public class Event extends Persistant {
    
    public final static String DATACHANGED = "DATA_CHANGED";
    public final static String SUBWORKFLOW_FINISHED = "SUBWORKFLOW_FINISHED";
    public final static String PARENTWORKFLOW_FINISHED = "PARENTWORKFLOW_FINISHED";

    private String type;
    
    private int senderWfId = 0;
    private int targetWfId = 0;

    /**Contructor for a new Event. If senderWfId is set 
     * to 0, it means, that the Event was not generated by a Workflow. 
     * @param type
     * @param senderWfId
     * @param targetWfId
     */
    public Event(String type, int senderWfId, int targetWfId) {
        this.type = type;
        this.senderWfId = senderWfId;
        this.targetWfId = targetWfId;
    }

    /**
     * @return the EventType, for Example STEP1_DONE, NONE...
     */
    public String getType() {
        return type;
    }

    public String toXML() {
        return "<event type=\"" + type + "\" />";
    }
    
    public String toString() {
        return "Eventtype: " + type + " TargetWF: " + targetWfId + 
        " SourceWF: " + senderWfId;
    }

    public boolean equals(Event e) {
        if (e.getType().equalsIgnoreCase(this.type)) {
            return true;
        } else {
            return false;
        }
    }

    /**
     * @return the workflow ID of the workflow that created this
     * event. It can be zero which means that this event is was
     * not created by a workflow. 
     */
    public int getSenderWfId() {
        return senderWfId;
    }

    /**
     * @return Returns the targetWfId.
     */
    public int getTargetWfId() {
        return targetWfId;
    }
    

}
